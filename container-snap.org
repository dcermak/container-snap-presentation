# -*- org-confirm-babel-evaluate: nil; -*-
#+AUTHOR: Dan ÄŒermÃ¡k
#+DATE: June 12, 2025
#+EMAIL: dcermak@suse.com
#+TITLE: =container-snap=
#+SUBTITLE: Atomic Updates from OCI Images using Podmanâ€™s Btrfs Driver

#+REVEAL_ROOT: ./node_modules/reveal.js/
#+REVEAL_THEME: simple
#+REVEAL_PLUGINS: (highlight notes history)
#+OPTIONS: toc:nil
#+REVEAL_DEFAULT_FRAG_STYLE: appear
#+REVEAL_INIT_OPTIONS: transition: 'none', hash: true
#+OPTIONS: num:nil toc:nil center:nil reveal_title_slide:nil
#+REVEAL_EXTRA_CSS: ./node_modules/@fortawesome/fontawesome-free/css/all.min.css
#+REVEAL_EXTRA_CSS: ./custom-style.css
#+REVEAL_HIGHLIGHT_CSS: ./node_modules/reveal.js/plugin/highlight/zenburn.css

#+REVEAL_TITLE_SLIDE: <h2 class="title">%t</h2>
#+REVEAL_TITLE_SLIDE: <p class="subtitle" style="color: Gray;">%s</p>
#+REVEAL_TITLE_SLIDE: <p class="author">%a</p>
#+REVEAL_TITLE_SLIDE: <div style="float:left"><a href="https://www.devconf.info/cz/" target="_blank"><img src="./media/devconf-cz-bw.svg" height="50px"/></a></div>
#+REVEAL_TITLE_SLIDE: <div style="float:right;font-size:35px;"><p xmlns:dct="http://purl.org/dc/terms/" xmlns:cc="http://creativecommons.org/ns#"><a href="https://creativecommons.org/licenses/by/4.0" target="_blank" rel="license noopener noreferrer" style="display:inline-block;">
#+REVEAL_TITLE_SLIDE: CC BY 4.0 <i class="fab fa-creative-commons"></i> <i class="fab fa-creative-commons-by"></i></a></p></div>

* who -u

Dan ÄŒermÃ¡k

@@html: <div style="float:center">@@
@@html: <table class="who-table">@@
@@html: <tr><td><i class="fab fa-suse"></i></td><td> Software Developer @SUSE</td></tr>@@
@@html: <tr><td><i class="fab fa-fedora"></i></td><td> i3 SIG, Package maintainer</td></tr>@@
@@html: <tr><td><i class="far fa-heart"></i></td><td> Developer Tools, Testing and Documentation, Home Automation</td></tr>@@
@@html: <tr></tr>@@
@@html: <tr></tr>@@
@@html: <tr><td><i class="fa-solid fa-globe"></i></td><td> <a href="https://dancermak.name/">https://dancermak.name</a></td></tr>@@
@@html: <tr><td><i class="fab fa-github"></i></td><td> <a href="https://github.com/dcermak/">dcermak</a></td></tr>@@
@@html: <tr><td><i class="fab fa-mastodon"></i></td><td> <a href="https://mastodon.social/@Defolos">@Defolos@mastodon.social</a></td></tr>@@
@@html: </table>@@
@@html: </div>@@


* Atomic Updates

#+begin_notes
- updates applied as a whole or not at all \rightarrow prevents breakage at inconvenient
  times
- also called transactional-updates
- often coupled with read-only =/=
- many implementations, often image based or A/B upgrades
#+end_notes

#+ATTR_REVEAL: :frag appear
Updates applied *fully* or *not at all*


* Bootable Containers

#+begin_notes
why care?
- do you know how to build a qcow2 image of the top of your head?
- but you can build a container image

- also *distribution infrastructure* (registries) is in place!
#+end_notes

#+ATTR_REVEAL: :frag appear
deploy an OS from OCI images

#+ATTR_REVEAL: :frag appear
But why ðŸ¤”

#+ATTR_REVEAL: :frag appear
We all know how to build a container


* Boot from OCI Images

#+ATTR_REVEAL: :frag appear
@@html:<img src="./media/bootable-containers.svg" height="500px"/>@@


* openSUSE's =tukit=

#+begin_notes
- atomic upgrades via btrfs snapshots
- new snapshot: create btrfs snapshot of root subvolume, run operations in there
- if update fails, snapshot trashed
- used by =transactional-update= on openSUSE MicroOS/SLE Micro/Aeon/Kalpa/etc.
#+end_notes

#+ATTR_REVEAL: :frag appear
@@html:<img src="./media/tukit.svg" height="500px"/>@@


* podman's =btrfs= storage driver

#+begin_notes
- storage driver for container images
- each image is a subvolume
- each layer is a snapshot
- each image is stored "plain text" on disk in a subvolume \Rightarrow switch default
  subvolume switches =/=
#+end_notes

#+ATTR_REVEAL: :frag appear
@@html:<img src="./media/btrfs-storage-driver.svg" height="500px"/>@@


* =container-snap=

#+begin_notes
- combination of the previous:
1. =container-snap= creates a custom btrfs store
2. pull an image and let it store to subvolume
3. switch to the subvolume
4. profit $$$
#+end_notes

#+ATTR_REVEAL: :frag appear
@@html:<img src="./media/container-snap.svg" height="500px"/>@@


* Demo

@@html:<video width="1066" height="600" controls><source src="media/demo.mp4" type="video/mp4"></video>@@

* Questions?

#+ATTR_REVEAL: :frag (appear)
Answers!
